class BRISK : public Feature2D
Класс для реализации BRISK обнаружения ключевых точек.


BRISK конструктор
C++: BRISK::BRISK(
int thresh=30,  //порог обнаружения FAST/AGAST
int octaves=3,   // октавы обнаружения. Используйте 0, чтобы сделать единую шкалу
float patternScale=1.0f  // применить эту шкалу с моделью, используемой для выборки окрестности характерной точки
)

BRISK конструктор для пользовательской модели
C++: BRISK::BRISK(
std::vector<float>& radiusList, // определяет радиусы (в пикселях),вокруг точки для взятия образцов
std::vector<int>& numberList,   // определяет число точек отбора проб на окружности выборки. Должно быть того же размера что и radiusList
float dMax=5.85f,  // Порог для коротких пар, используемых для формирования дескрипторов
float dMin=8.2f,  // Порог для длинных пар, используемых для формирования дескрипторов
std::vector<int> indexChange=std::vector<int>()  //  индекс переназначения бит
)


BRISK::operator()
Находит ключевые точки на изображении и вычисляет их дескриптор
C++: void BRISK::operator()(
	InputArray image,  // входное изображениие 8 бит оттенков серого
	InputArray mask,    // Маска операции
	vector<KeyPoint>& keypoints,   // выходной вектор ключевых точек
	OutputArray descriptors,    // Выходные дескрипторы. cv::noArray() в случае, если в них нету необходимости.
	bool useProvidedKeypoints=false   // true - использование предоставленного вектора ключевых точек. False - обнаружение точек.
	) 